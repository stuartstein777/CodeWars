C#:					4 kyu / 38.6 %
Clojure:			4 kyu / 18.6 %
JavaScript:			4 kyu /  5.4 %
Python:				5 kyu / 12.8 %
Ruby:				5 kyu /  5.3 %
Java:				6 kyu /  7.2 %
Rust:				7 kyu / 85.7 %
C:					7 kyu / 67.9 %
Haskell:			7 kyu / 58.9 %
CoffeeScript:		7 kyu / 57.1 %
Go:					7 kyu / 48.2 %
C++:				7 kyu / 46.4 %
Elixir:				7 kyu / 46.4 %
Dart:				7 kyu / 39.3 %
SQL:				7 kyu / 37.5 %
Crystal:			7 kyu / 35.7 %
TypeScript:			7 kyu / 32.1 %
PHP:				7 kyu / 21.4 %
F#:					7 kyu / 17.9 %
Groovy:				7 kyu / 12.5 %
Kotlin:				7 kyu /  7.1 %
Scala:				7 kyu /  3.6 %
Elm:				7 kyu /  0.0 %
Julia:				8 kyu / 95.0 %
Racket:				8 kyu / 85.0 %
CFML:				8 kyu / 65.0 %
R:					8 kyu / 60.0 %
Swift:				8 kyu / 55.0 %
Objective-C:		8 kyu / 40.0 %
Prolog:				8 kyu / 35.0 %
Lua:				8 kyu / 30.0 %
Reason:				8 kyu / 30.0 %
VB:					8 kyu / 30.0 %
Fortran:			8 kyu / 25.0 %
Erlang:				8 kyu / 20.0 %
Nim:				8 kyu / 20.0 %
OCaml:				8 kyu / 20.0 %
Shell:				8 kyu / 20.0 %
Solidity:			8 kyu / 20.0 %
Agda:				8 kyu / 10.0 %
Factor:				8 kyu / 10.0 %
Forth:				8 kyu / 10.0 %
Idris:				8 kyu / 10.0 %
PowerShell:			8 kyu / 10.0 %
PureScript:			8 kyu / 10.0 %

NUmber of digits Math.floor(Math.Log10(Math.abs(value)))
"hello".split("").reduce((acc, d, i, {length}) => acc + "d:" + d + "i:" + i + length,0)


const divide = (a, b) => a / b;
const mostLikely = (p1, p2) => divide(...p1.split(':')) > divide(...p2.split(':'));


